//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


// 
// This source code was auto-generated by wsdl, Version=4.0.30319.33440.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "MobileWebSvcBinding", Namespace = "urn:MobileWebSvc")]
public partial class MobileWebSvc : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback pingWebSvcOperationCompleted;

    private System.Threading.SendOrPostCallback getPrimaryBalanceOperationCompleted;

    private System.Threading.SendOrPostCallback getDetailBalanceOperationCompleted;

    private System.Threading.SendOrPostCallback sapcQueryOperationCompleted;

    private System.Threading.SendOrPostCallback externalBalanceUpdateOperationCompleted;

    /// <remarks/>
    //public MobileWebSvc() {
    //    this.Url = "http://limeware:port/MobileWebSvc";
    //}
    public MobileWebSvc(string url)
    {
        this.Url = url;
    }
    /// <remarks/>
    public event pingWebSvcCompletedEventHandler pingWebSvcCompleted;

    /// <remarks/>
    public event getPrimaryBalanceCompletedEventHandler getPrimaryBalanceCompleted;

    /// <remarks/>
    public event getDetailBalanceCompletedEventHandler getDetailBalanceCompleted;

    /// <remarks/>
    public event sapcQueryCompletedEventHandler sapcQueryCompleted;

    /// <remarks/>
    public event externalBalanceUpdateCompletedEventHandler externalBalanceUpdateCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:MobileWebSvc#pingWebSvc", RequestNamespace = "urn:MobileWebSvc", ResponseNamespace = "urn:MobileWebSvc", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void pingWebSvc(string serverId, out int returnCode, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnCodeSpecified, out string returnDescription, out string hostID, out string releaseVersion, out string localTime)
    {
        object[] results = this.Invoke("pingWebSvc", new object[] {
                    serverId});
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        hostID = ((string)(results[3]));
        releaseVersion = ((string)(results[4]));
        localTime = ((string)(results[5]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginpingWebSvc(string serverId, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("pingWebSvc", new object[] {
                    serverId}, callback, asyncState);
    }

    /// <remarks/>
    public void EndpingWebSvc(System.IAsyncResult asyncResult, out int returnCode, out bool returnCodeSpecified, out string returnDescription, out string hostID, out string releaseVersion, out string localTime)
    {
        object[] results = this.EndInvoke(asyncResult);
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        hostID = ((string)(results[3]));
        releaseVersion = ((string)(results[4]));
        localTime = ((string)(results[5]));
    }

    /// <remarks/>
    public void pingWebSvcAsync(string serverId)
    {
        this.pingWebSvcAsync(serverId, null);
    }

    /// <remarks/>
    public void pingWebSvcAsync(string serverId, object userState)
    {
        if ((this.pingWebSvcOperationCompleted == null))
        {
            this.pingWebSvcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingWebSvcOperationCompleted);
        }
        this.InvokeAsync("pingWebSvc", new object[] {
                    serverId}, this.pingWebSvcOperationCompleted, userState);
    }

    private void OnpingWebSvcOperationCompleted(object arg)
    {
        if ((this.pingWebSvcCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.pingWebSvcCompleted(this, new pingWebSvcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:MobileWebSvc#getPrimaryBalance", RequestNamespace = "urn:MobileWebSvc", ResponseNamespace = "urn:MobileWebSvc", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void getPrimaryBalance(long msisdn, out int returnCode, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnCodeSpecified, out string returnDescription, out string subscriberId, out string primaryOfferId, out string ratingState, out string primaryBalance, out string balanceExpiry)
    {
        object[] results = this.Invoke("getPrimaryBalance", new object[] {
                    msisdn});
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        subscriberId = ((string)(results[3]));
        primaryOfferId = ((string)(results[4]));
        ratingState = ((string)(results[5]));
        primaryBalance = ((string)(results[6]));
        balanceExpiry = ((string)(results[7]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetPrimaryBalance(long msisdn, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getPrimaryBalance", new object[] {
                    msisdn}, callback, asyncState);
    }

    /// <remarks/>
    public void EndgetPrimaryBalance(System.IAsyncResult asyncResult, out int returnCode, out bool returnCodeSpecified, out string returnDescription, out string subscriberId, out string primaryOfferId, out string ratingState, out string primaryBalance, out string balanceExpiry)
    {
        object[] results = this.EndInvoke(asyncResult);
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        subscriberId = ((string)(results[3]));
        primaryOfferId = ((string)(results[4]));
        ratingState = ((string)(results[5]));
        primaryBalance = ((string)(results[6]));
        balanceExpiry = ((string)(results[7]));
    }

    /// <remarks/>
    public void getPrimaryBalanceAsync(long msisdn)
    {
        this.getPrimaryBalanceAsync(msisdn, null);
    }

    /// <remarks/>
    public void getPrimaryBalanceAsync(long msisdn, object userState)
    {
        if ((this.getPrimaryBalanceOperationCompleted == null))
        {
            this.getPrimaryBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrimaryBalanceOperationCompleted);
        }
        this.InvokeAsync("getPrimaryBalance", new object[] {
                    msisdn}, this.getPrimaryBalanceOperationCompleted, userState);
    }

    private void OngetPrimaryBalanceOperationCompleted(object arg)
    {
        if ((this.getPrimaryBalanceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPrimaryBalanceCompleted(this, new getPrimaryBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:MobileWebSvc#getDetailBalance", RequestNamespace = "urn:MobileWebSvc", ResponseNamespace = "urn:MobileWebSvc", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void getDetailBalance(long msisdn, out int returnCode, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnCodeSpecified, out string returnDescription, out getDetailBalanceResponseActiveBalanceList activeBalanceList)
    {
        object[] results = this.Invoke("getDetailBalance", new object[] {
                    msisdn});
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        activeBalanceList = ((getDetailBalanceResponseActiveBalanceList)(results[3]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetDetailBalance(long msisdn, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getDetailBalance", new object[] {
                    msisdn}, callback, asyncState);
    }

    /// <remarks/>
    public void EndgetDetailBalance(System.IAsyncResult asyncResult, out int returnCode, out bool returnCodeSpecified, out string returnDescription, out getDetailBalanceResponseActiveBalanceList activeBalanceList)
    {
        object[] results = this.EndInvoke(asyncResult);
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        activeBalanceList = ((getDetailBalanceResponseActiveBalanceList)(results[3]));
    }

    /// <remarks/>
    public void getDetailBalanceAsync(long msisdn)
    {
        this.getDetailBalanceAsync(msisdn, null);
    }

    /// <remarks/>
    public void getDetailBalanceAsync(long msisdn, object userState)
    {
        if ((this.getDetailBalanceOperationCompleted == null))
        {
            this.getDetailBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailBalanceOperationCompleted);
        }
        this.InvokeAsync("getDetailBalance", new object[] {
                    msisdn}, this.getDetailBalanceOperationCompleted, userState);
    }

    private void OngetDetailBalanceOperationCompleted(object arg)
    {
        if ((this.getDetailBalanceCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDetailBalanceCompleted(this, new getDetailBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:MobileWebSvc#sapcQuery", RequestNamespace = "urn:MobileWebSvc", ResponseNamespace = "urn:MobileWebSvc", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void sapcQuery(
                long msisdn,
                out int returnCode,
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnCodeSpecified,
                out string returnDescription,
                out string GroupId,
                out string SubscriptionType,
                out string SubscriptionDate,
                out int ResetDays,
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ResetDaysSpecified,
                out long PlanVolume,
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool PlanVolumeSpecified,
                out long ExpiryEpoch,
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ExpiryEpochSpecified,
                out string ExpiryDate,
                [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] out string SapcExpiryDate,
                out long UsedVolume,
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UsedVolumeSpecified)
    {
        object[] results = this.Invoke("sapcQuery", new object[] {
                    msisdn});
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        GroupId = ((string)(results[3]));
        SubscriptionType = ((string)(results[4]));
        SubscriptionDate = ((string)(results[5]));
        ResetDays = ((int)(results[6]));
        ResetDaysSpecified = ((bool)(results[7]));
        PlanVolume = ((long)(results[8]));
        PlanVolumeSpecified = ((bool)(results[9]));
        ExpiryEpoch = ((long)(results[10]));
        ExpiryEpochSpecified = ((bool)(results[11]));
        ExpiryDate = ((string)(results[12]));
        SapcExpiryDate = ((string)(results[13]));
        UsedVolume = ((long)(results[14]));
        UsedVolumeSpecified = ((bool)(results[15]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginsapcQuery(long msisdn, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("sapcQuery", new object[] {
                    msisdn}, callback, asyncState);
    }

    /// <remarks/>
    public void EndsapcQuery(
                System.IAsyncResult asyncResult,
                out int returnCode,
                out bool returnCodeSpecified,
                out string returnDescription,
                out string GroupId,
                out string SubscriptionType,
                out string SubscriptionDate,
                out int ResetDays,
                out bool ResetDaysSpecified,
                out long PlanVolume,
                out bool PlanVolumeSpecified,
                out long ExpiryEpoch,
                out bool ExpiryEpochSpecified,
                out string ExpiryDate,
                out string SapcExpiryDate,
                out long UsedVolume,
                out bool UsedVolumeSpecified)
    {
        object[] results = this.EndInvoke(asyncResult);
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        GroupId = ((string)(results[3]));
        SubscriptionType = ((string)(results[4]));
        SubscriptionDate = ((string)(results[5]));
        ResetDays = ((int)(results[6]));
        ResetDaysSpecified = ((bool)(results[7]));
        PlanVolume = ((long)(results[8]));
        PlanVolumeSpecified = ((bool)(results[9]));
        ExpiryEpoch = ((long)(results[10]));
        ExpiryEpochSpecified = ((bool)(results[11]));
        ExpiryDate = ((string)(results[12]));
        SapcExpiryDate = ((string)(results[13]));
        UsedVolume = ((long)(results[14]));
        UsedVolumeSpecified = ((bool)(results[15]));
    }

    /// <remarks/>
    public void sapcQueryAsync(long msisdn)
    {
        this.sapcQueryAsync(msisdn, null);
    }

    /// <remarks/>
    public void sapcQueryAsync(long msisdn, object userState)
    {
        if ((this.sapcQueryOperationCompleted == null))
        {
            this.sapcQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsapcQueryOperationCompleted);
        }
        this.InvokeAsync("sapcQuery", new object[] {
                    msisdn}, this.sapcQueryOperationCompleted, userState);
    }

    private void OnsapcQueryOperationCompleted(object arg)
    {
        if ((this.sapcQueryCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.sapcQueryCompleted(this, new sapcQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:MobileWebSvc#externalBalanceUpdate", RequestNamespace = "urn:MobileWebSvc", ResponseNamespace = "urn:MobileWebSvc", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void externalBalanceUpdate(long msisdn, string promoId, externalBalanceUpdateChangeList changeList, out int returnCode, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnCodeSpecified, out string returnDescription, out string requiredRecharge, out externalBalanceUpdateResponseActiveDataList activeDataList, out externalBalanceUpdateResponseActiveBalanceList activeBalanceList)
    {
        object[] results = this.Invoke("externalBalanceUpdate", new object[] {
                    msisdn,
                    promoId,
                    changeList});
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        requiredRecharge = ((string)(results[3]));
        activeDataList = ((externalBalanceUpdateResponseActiveDataList)(results[4]));
        activeBalanceList = ((externalBalanceUpdateResponseActiveBalanceList)(results[5]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginexternalBalanceUpdate(long msisdn, string promoId, externalBalanceUpdateChangeList changeList, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("externalBalanceUpdate", new object[] {
                    msisdn,
                    promoId,
                    changeList}, callback, asyncState);
    }

    /// <remarks/>
    public void EndexternalBalanceUpdate(System.IAsyncResult asyncResult, out int returnCode, out bool returnCodeSpecified, out string returnDescription, out string requiredRecharge, out externalBalanceUpdateResponseActiveDataList activeDataList, out externalBalanceUpdateResponseActiveBalanceList activeBalanceList)
    {
        object[] results = this.EndInvoke(asyncResult);
        returnCode = ((int)(results[0]));
        returnCodeSpecified = ((bool)(results[1]));
        returnDescription = ((string)(results[2]));
        requiredRecharge = ((string)(results[3]));
        activeDataList = ((externalBalanceUpdateResponseActiveDataList)(results[4]));
        activeBalanceList = ((externalBalanceUpdateResponseActiveBalanceList)(results[5]));
    }

    /// <remarks/>
    public void externalBalanceUpdateAsync(long msisdn, string promoId, externalBalanceUpdateChangeList changeList)
    {
        this.externalBalanceUpdateAsync(msisdn, promoId, changeList, null);
    }

    /// <remarks/>
    public void externalBalanceUpdateAsync(long msisdn, string promoId, externalBalanceUpdateChangeList changeList, object userState)
    {
        if ((this.externalBalanceUpdateOperationCompleted == null))
        {
            this.externalBalanceUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexternalBalanceUpdateOperationCompleted);
        }
        this.InvokeAsync("externalBalanceUpdate", new object[] {
                    msisdn,
                    promoId,
                    changeList}, this.externalBalanceUpdateOperationCompleted, userState);
    }

    private void OnexternalBalanceUpdateOperationCompleted(object arg)
    {
        if ((this.externalBalanceUpdateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.externalBalanceUpdateCompleted(this, new externalBalanceUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class getDetailBalanceResponseActiveBalanceList
{

    private getDetailBalanceResponseActiveBalanceListBalance[] balanceField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("balance")]
    public getDetailBalanceResponseActiveBalanceListBalance[] balance
    {
        get
        {
            return this.balanceField;
        }
        set
        {
            this.balanceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class getDetailBalanceResponseActiveBalanceListBalance
{

    private string balNameField;

    private string balLongNameField;

    private string balTypeField;

    private string balCategoryField;

    private string balValueField;

    private string balExpiryField;

    private string balDispField;

    /// <remarks/>
    public string balName
    {
        get
        {
            return this.balNameField;
        }
        set
        {
            this.balNameField = value;
        }
    }

    /// <remarks/>
    public string balLongName
    {
        get
        {
            return this.balLongNameField;
        }
        set
        {
            this.balLongNameField = value;
        }
    }

    /// <remarks/>
    public string balType
    {
        get
        {
            return this.balTypeField;
        }
        set
        {
            this.balTypeField = value;
        }
    }

    /// <remarks/>
    public string balCategory
    {
        get
        {
            return this.balCategoryField;
        }
        set
        {
            this.balCategoryField = value;
        }
    }

    /// <remarks/>
    public string balValue
    {
        get
        {
            return this.balValueField;
        }
        set
        {
            this.balValueField = value;
        }
    }

    /// <remarks/>
    public string balExpiry
    {
        get
        {
            return this.balExpiryField;
        }
        set
        {
            this.balExpiryField = value;
        }
    }

    /// <remarks/>
    public string balDisp
    {
        get
        {
            return this.balDispField;
        }
        set
        {
            this.balDispField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class externalBalanceUpdateChangeList
{

    private externalBalanceUpdateChangeListChangeBalance[] changeBalanceField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("changeBalance")]
    public externalBalanceUpdateChangeListChangeBalance[] changeBalance
    {
        get
        {
            return this.changeBalanceField;
        }
        set
        {
            this.changeBalanceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class externalBalanceUpdateChangeListChangeBalance
{

    private string balanceLabelField;

    private string balanceChangeValueField;

    private string expiryChangeField;

    private string extendFromEOBField;

    private string eobTimeOverrideField;

    /// <remarks/>
    public string balanceLabel
    {
        get
        {
            return this.balanceLabelField;
        }
        set
        {
            this.balanceLabelField = value;
        }
    }

    /// <remarks/>
    public string balanceChangeValue
    {
        get
        {
            return this.balanceChangeValueField;
        }
        set
        {
            this.balanceChangeValueField = value;
        }
    }

    /// <remarks/>
    public string expiryChange
    {
        get
        {
            return this.expiryChangeField;
        }
        set
        {
            this.expiryChangeField = value;
        }
    }

    /// <remarks/>
    public string extendFromEOB
    {
        get
        {
            return this.extendFromEOBField;
        }
        set
        {
            this.extendFromEOBField = value;
        }
    }

    /// <remarks/>
    public string eobTimeOverride
    {
        get
        {
            return this.eobTimeOverrideField;
        }
        set
        {
            this.eobTimeOverrideField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class externalBalanceUpdateResponseActiveDataList
{

    private externalBalanceUpdateResponseActiveDataListDataBalance[] dataBalanceField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dataBalance")]
    public externalBalanceUpdateResponseActiveDataListDataBalance[] dataBalance
    {
        get
        {
            return this.dataBalanceField;
        }
        set
        {
            this.dataBalanceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class externalBalanceUpdateResponseActiveDataListDataBalance
{

    private int sapcRetCodeField;

    private bool sapcRetCodeFieldSpecified;

    private long dataValueField;

    private bool dataValueFieldSpecified;

    private string dataExpiryField;

    /// <remarks/>
    public int sapcRetCode
    {
        get
        {
            return this.sapcRetCodeField;
        }
        set
        {
            this.sapcRetCodeField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sapcRetCodeSpecified
    {
        get
        {
            return this.sapcRetCodeFieldSpecified;
        }
        set
        {
            this.sapcRetCodeFieldSpecified = value;
        }
    }

    /// <remarks/>
    public long dataValue
    {
        get
        {
            return this.dataValueField;
        }
        set
        {
            this.dataValueField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dataValueSpecified
    {
        get
        {
            return this.dataValueFieldSpecified;
        }
        set
        {
            this.dataValueFieldSpecified = value;
        }
    }

    /// <remarks/>
    public string dataExpiry
    {
        get
        {
            return this.dataExpiryField;
        }
        set
        {
            this.dataExpiryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class externalBalanceUpdateResponseActiveBalanceList
{

    private externalBalanceUpdateResponseActiveBalanceListBalance[] balanceField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("balance")]
    public externalBalanceUpdateResponseActiveBalanceListBalance[] balance
    {
        get
        {
            return this.balanceField;
        }
        set
        {
            this.balanceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:MobileWebSvc")]
public partial class externalBalanceUpdateResponseActiveBalanceListBalance
{

    private string balNameField;

    private string balLongNameField;

    private string balTypeField;

    private string balCategoryField;

    private string balValueField;

    private string balExpiryField;

    private string balDispField;

    /// <remarks/>
    public string balName
    {
        get
        {
            return this.balNameField;
        }
        set
        {
            this.balNameField = value;
        }
    }

    /// <remarks/>
    public string balLongName
    {
        get
        {
            return this.balLongNameField;
        }
        set
        {
            this.balLongNameField = value;
        }
    }

    /// <remarks/>
    public string balType
    {
        get
        {
            return this.balTypeField;
        }
        set
        {
            this.balTypeField = value;
        }
    }

    /// <remarks/>
    public string balCategory
    {
        get
        {
            return this.balCategoryField;
        }
        set
        {
            this.balCategoryField = value;
        }
    }

    /// <remarks/>
    public string balValue
    {
        get
        {
            return this.balValueField;
        }
        set
        {
            this.balValueField = value;
        }
    }

    /// <remarks/>
    public string balExpiry
    {
        get
        {
            return this.balExpiryField;
        }
        set
        {
            this.balExpiryField = value;
        }
    }

    /// <remarks/>
    public string balDisp
    {
        get
        {
            return this.balDispField;
        }
        set
        {
            this.balDispField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void pingWebSvcCompletedEventHandler(object sender, pingWebSvcCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class pingWebSvcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal pingWebSvcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int returnCode
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool returnCodeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }

    /// <remarks/>
    public string returnDescription
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }

    /// <remarks/>
    public string hostID
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }

    /// <remarks/>
    public string releaseVersion
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[4]));
        }
    }

    /// <remarks/>
    public string localTime
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getPrimaryBalanceCompletedEventHandler(object sender, getPrimaryBalanceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPrimaryBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getPrimaryBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int returnCode
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool returnCodeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }

    /// <remarks/>
    public string returnDescription
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }

    /// <remarks/>
    public string subscriberId
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }

    /// <remarks/>
    public string primaryOfferId
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[4]));
        }
    }

    /// <remarks/>
    public string ratingState
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[5]));
        }
    }

    /// <remarks/>
    public string primaryBalance
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[6]));
        }
    }

    /// <remarks/>
    public string balanceExpiry
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[7]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void getDetailBalanceCompletedEventHandler(object sender, getDetailBalanceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDetailBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getDetailBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int returnCode
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool returnCodeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }

    /// <remarks/>
    public string returnDescription
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }

    /// <remarks/>
    public getDetailBalanceResponseActiveBalanceList activeBalanceList
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((getDetailBalanceResponseActiveBalanceList)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void sapcQueryCompletedEventHandler(object sender, sapcQueryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class sapcQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal sapcQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int returnCode
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool returnCodeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }

    /// <remarks/>
    public string returnDescription
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }

    /// <remarks/>
    public string GroupId
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }

    /// <remarks/>
    public string SubscriptionType
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[4]));
        }
    }

    /// <remarks/>
    public string SubscriptionDate
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[5]));
        }
    }

    /// <remarks/>
    public int ResetDays
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[6]));
        }
    }

    /// <remarks/>
    public bool ResetDaysSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[7]));
        }
    }

    /// <remarks/>
    public long PlanVolume
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[8]));
        }
    }

    /// <remarks/>
    public bool PlanVolumeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[9]));
        }
    }

    /// <remarks/>
    public long ExpiryEpoch
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[10]));
        }
    }

    /// <remarks/>
    public bool ExpiryEpochSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[11]));
        }
    }

    /// <remarks/>
    public string ExpiryDate
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[12]));
        }
    }

    /// <remarks/>
    public string SapcExpiryDate
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[13]));
        }
    }

    /// <remarks/>
    public long UsedVolume
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[14]));
        }
    }

    /// <remarks/>
    public bool UsedVolumeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[15]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void externalBalanceUpdateCompletedEventHandler(object sender, externalBalanceUpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class externalBalanceUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal externalBalanceUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int returnCode
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool returnCodeSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }

    /// <remarks/>
    public string returnDescription
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }

    /// <remarks/>
    public string requiredRecharge
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }

    /// <remarks/>
    public externalBalanceUpdateResponseActiveDataList activeDataList
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((externalBalanceUpdateResponseActiveDataList)(this.results[4]));
        }
    }

    /// <remarks/>
    public externalBalanceUpdateResponseActiveBalanceList activeBalanceList
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((externalBalanceUpdateResponseActiveBalanceList)(this.results[5]));
        }
    }
}
/**/